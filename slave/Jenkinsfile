pipeline {
    agent any

    parameters {
        string(name: 'DOCKERHUB_CREDENTIALS_USR')
        string(name: 'DOCKERHUB_CREDENTIALS_PSW')
    }

    stages {
        stage('Trigger Stage') {
            steps {
                echo "Hello dockerhub."
                echo "Username: ${params.DOCKERHUB_CREDENTIALS_USR}"
            }
        }
        
        stage('Initialize Stage') {
            steps {
                echo 'Initial : Delete  containers and images'
                echo "Current path is ${pwd()}"
                bat "docker-compose down --rmi all --volumes --remove-orphans"
                bat "docker network prune"
                bat "docker volume prune"
            }
        }
        
        stage('Login Stage') {
            steps {
                echo "Login : Logging in . . ."
                bat "docker login -u ${params.DOCKERHUB_CREDENTIALS_USR} -p ${params.DOCKERHUB_CREDENTIALS_PSW}"
            }
        }

        stage('Pull Stage') {
            steps {
                bat "docker-compose pull"
            }
        }
        
        stage('Install library'){
            steps {
                dir('backend'){
                    bat "curl -L -o yolov4.cfg https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov4.cfg"
                    bat "curl -L -o yolov4.weights https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights"
                    bat "curl -L -o yolov3_classes.txt https://github.com/arunponnusamy/object-detection-opencv/raw/master/yolov3.txt"
                }
            }
        }
        
        stage('Run Stage') {
            steps {
                bat "docker-compose up"
            }
        }
    }
}
